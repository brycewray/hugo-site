name: Deploy to Render

# To do a push without triggering this GHA, include one of
# the following in the **commit message**
# (INCLUDING the brackets AND case-sensitivity):
#
# [skip ci]
# [ci skip]
# [no ci]
# [skip actions]
# [actions skip]
#
# “Alternatively, you can end the commit message
# with two empty lines followed by either
# `skip-checks: true` or `skip-checks:true`.”
#
#
# ref: https://docs.github.com/en/actions/managing-workflow-runs/skipping-workflow-runs

on:
  push:
    branches:
      - main
  # schedule:
  #   - cron: '0 12 * * *' # every day at 12:00 UTC (0700CDT/0600CST)
    # The above is to make sure static tweets' images don't run afoul
    # of Twitter's caching strategy
  #   - cron: '0 0 * * *'   # every day at 00:00UTC (1900CDT/1800CST)
  #   - cron: '0 8 * * *'   # every day at 08:00UTC (0300CDT/0200CST)
  #   - cron: '0 16 * * *'  # every day at 16:00UTC (1100CDT/1000CST)
  # workflow_dispatch:

env:
  HUGO_VERSION: 0.111.2 # will get Extended Version below
  DART_SASS_VERSION: 1.58.3
  PAGEFIND_VERSION: 0.12.0
#   BEARER_TOKEN: ${{ secrets.BEARER_TOKEN }} # old Twitter Dev stuff
#   TOKEN: ${{ secrets.TOKEN }} # old Twitter Dev stuff
#   TOKEN_SECRET: ${{ secrets.TOKEN_SECRET }} # old Twitter Dev stuff
#   CONSUMER_KEY: ${{ secrets.CONSUMER_KEY }} # old Twitter Dev stuff
#   CONSUMER_SECRET: ${{ secrets.CONSUMER_SECRET }} # old Twitter Dev stuff
#   WEBMENTION_IO_TOKEN: ${{ secrets.WEBMENTION_IO_TOKEN }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
    steps:
      - name: Checkout default branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          # Fetch **all** history (not just deploy commit) for Hugo's .GitInfo and .Lastmod
          # See https://discourse.gohugo.io/t/problems-with-gitinfo-in-ci/22480
      - name: Download Hugo
        run: wget https://github.com/gohugoio/hugo/releases/download/v${{ env.HUGO_VERSION }}/hugo_extended_${{ env.HUGO_VERSION }}_linux-amd64.deb -O hugo_extended_${{ env.HUGO_VERSION }}_linux-amd64.deb
        # 0.103.0 began new naming convention
      - name: Install Hugo
        run: sudo dpkg -i hugo*.deb
      - name: Download Embedded Dart Sass
        run: curl -LJO https://github.com/sass/dart-sass-embedded/releases/download/${{ env.DART_SASS_VERSION }}/sass_embedded-${{ env.DART_SASS_VERSION }}-linux-x64.tar.gz
      - name: Unpack Embedded Dart Sass
        run: |
          tar -xvf sass_embedded-${{ env.DART_SASS_VERSION }}-linux-x64.tar.gz
          sass_embedded/dart-sass-embedded --version
      - name: Add Embedded Dart Sass to the PATH
        run: echo "$GITHUB_WORKSPACE/sass_embedded" >> $GITHUB_PATH
      - name: Install Pagefind
        uses: supplypike/setup-bin@v3
        with:
          uri: "https://github.com/CloudCannon/pagefind/releases/download/v${{ env.PAGEFIND_VERSION }}/pagefind_extended-v${{ env.PAGEFIND_VERSION }}-x86_64-unknown-linux-musl.tar.gz"
          name: "pagefind_extended"
          version: ${{env.PAGEFIND_VERSION}}
      - name: Build site with Hugo
        run: hugo --verbose --minify
      - name: Move "excerpts" feeds (RSS/Atom and JSON)
        run: |
          mv public/posts/index.xml public/index-excerpts.xml
          mv public/posts/index.json public/index-excerpts.json
      - name: Run Pagefind
        run: pagefind_extended --source "public"
      - name: Publish to Render
        uses: johnbeynon/render-deploy-action
        with:
          service_id: ${{ secrets.RENDER_SERVICE_ID }} # required
          api_key: ${{ secrets.RENDER_API_KEY }} # required
          # clear_cache: false # Clear build cache. Optional
          # wait_deploy: false # Wait until the deploy status is successful. Warning! Free Render services can take +5 minutes to be fully deployed. Optional
  # following, for restarts-on-failures, based on:
  # https://www.eliostruyf.com/restart-github-actions-workflow-failed/
  # restart_on_failed_push_build:
  #   name: Restart failed push build
  #   runs-on: ubuntu-latest
  #   # restarts push-based run when it fails
  #   if: github.event_name == 'push' && failure()
  #   needs: [deploy]
  #   steps:
  #     - name: Retry the workflow
  #       run: |
  #         curl -i \
  #         -X POST \
  #         -H "Accept: application/vnd.github.v3+json" \
  #         -H "Authorization: token ${{ secrets.GHA_PAT }}" \
  #         https://api.github.com/repos/brycewray/hugo_site/actions/workflows/26219143/dispatches \
  #         -d '{"ref": "${{ github.ref }}" }'
  # restart_on_failed_cron_job:
  #   name: Restart failed cron job build
  #   runs-on: ubuntu-latest
  #   # restarts scheduled run when it fails
  #   if: github.event_name == 'schedule' && failure()
  #   needs: [deploy]
  #   steps:
  #     - name: Retry the workflow
  #       run: |
  #         curl -i \
  #         -X POST \
  #         -H "Accept: application/vnd.github.v3+json" \
  #         -H "Authorization: token ${{ secrets.GHA_PAT }}" \
  #         https://api.github.com/repos/brycewray/hugo_site/actions/workflows/26219143/dispatches \
  #         -d '{"ref": "${{ github.ref }}" }'

