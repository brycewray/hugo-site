name: Deploy to web

on:
  push:
    branches:
      - main

env:
  HUGO_VERSION: 0.113.0 # will get Extended Version below
  DART_SASS_VERSION: 1.62.1 # (depends on STYLING env var)
  EMBEDDED_SASS: true # ('true' for pre-1.62.1)
  PAGEFIND_VERSION: 0.12.0
  PAGEFIND_NPX: false # ('true' for npx command, otherwise for binary install via `setup-bin`)


jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
    steps:
      - name: Set GHA runner TZ to U.S. Central time
        uses: szenius/set-timezone@v1.2
        with:
          timezoneLinux: "America/Chicago" # default = "UTC"
          timezoneMacos: "America/Chicago" # default = "UTC"
          timezoneWindows: "Central Standard Time" # default = "GMT"
      - name: Checkout default branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install Hugo
        run: |
          wget https://github.com/gohugoio/hugo/releases/download/v${{ env.HUGO_VERSION }}/hugo_extended_${{ env.HUGO_VERSION }}_linux-amd64.deb -O hugo_extended_${{ env.HUGO_VERSION }}_linux-amd64.deb
          sudo dpkg -i hugo*.deb
      - name: Install Embedded Dart Sass (cond. - with EMBEDDED_SASS)
        if: ${{ env.EMBEDDED_SASS == 'true' }}
        run: |
          curl -LJO https://github.com/sass/dart-sass-embedded/releases/download/${{ env.DART_SASS_VERSION }}/sass_embedded-${{ env.DART_SASS_VERSION }}-linux-x64.tar.gz
          tar -xvf sass_embedded-${{ env.DART_SASS_VERSION }}-linux-x64.tar.gz
          sass_embedded/dart-sass-embedded --version
          echo "$GITHUB_WORKSPACE/sass_embedded" >> $GITHUB_PATH
      - name: Install Dart Sass (cond. - without EMBEDDED_SASS)
        # based on Sass changes announced 2023-05-20:
        # https://sass-lang.com/blog/rfc-embedded-protocol-2
        # (along with "Archived" status of previous Embedded Dart Sass repo on GitHub)
        if: ${{ env.EMBEDDED_SASS != 'true' }}
        run: |
          curl -LJO https://github.com/sass/dart-sass/releases/download/${{ env.DART_SASS_VERSION }}/dart-sass-${{ env.DART_SASS_VERSION }}-linux-x64.tar.gz
          tar -xvf dart-sass-${{ env.DART_SASS_VERSION }}-linux-x64.tar.gz
          sass --version
          echo "$GITHUB_WORKSPACE/dart-sass" >> $GITHUB_PATH
      - name: Cache Hugo resources
        id: cache-resources
        uses: actions/cache@v3
        with:
          path: resources
          key: ${{ runner.os }}-resources
      - name: Build site with Hugo, move feed files
        run: |
          hugo --verbose --minify --gc
          mv public/posts/index.xml public/index-excerpts.xml
          mv public/posts/index.json public/index-excerpts.json
      - name: Install Pagefind (cond. non-npx)
        if: ${{ env.PAGEFIND_NPX != 'true' }}
        uses: supplypike/setup-bin@v3
        with:
          uri: "https://github.com/CloudCannon/pagefind/releases/download/v${{ env.PAGEFIND_VERSION }}/pagefind_extended-v${{ env.PAGEFIND_VERSION }}-x86_64-unknown-linux-musl.tar.gz"
          name: "pagefind_extended"
          version: ${{env.PAGEFIND_VERSION}}
      - name: Run Pagefind (cond. - non-npx)
        if: ${{ env.PAGEFIND_NPX != 'true'}}
        run: pagefind_extended --source "public"
      - name: Run Pagefind (cond. - with npx)
        if: ${{ env.PAGEFIND_NPX == 'true' }}
        run: npm_config_yes=true npx pagefind --source "public"
      - name: Install Wrangler for CFP
        run: npm i -g wrangler --unsafe-perm=true --commit-dirty=true
      - name: Publish to CFP
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CFP_API_TOKEN }}
          accountID: ${{ secrets.CF_ACCOUNT_ID }}
          projectName: 'static-site-v2' # was 'static-site' (now 'static-site-old')
          directory: 'public'
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          wranglerVersion: '3' # enable Wrangler v3

# To do a push without triggering this GHA, include one of
# the following in the **commit message**
# (INCLUDING the brackets AND case-sensitivity):
#
# [skip ci] (works also in CFP GUI)
# [ci skip] (works also in CFP GUI)
# [no ci]
# [skip actions]
# [actions skip]
#
# “Alternatively, you can end the commit message
# with two empty lines followed by either
# `skip-checks: true` or `skip-checks:true`.”
#
# ref: https://docs.github.com/en/actions/managing-workflow-runs/skipping-workflow-runs
#
# --------
# For CFP GUI only, it's (case-**in**sensitive):
# [CI Skip]
# [CI-Skip]
# [Skip CI] <-- This is the one we can use on all, albeit as `[skip ci]`
# [Skip-CI]
# [CF-Pages-Skip]
# ref: https://developers.cloudflare.com/pages/platform/branch-build-controls/
# --------
