@charset 'utf-8';
@use 'partials/variables' as var;
@use 'partials/colors' as clr;

/* ======= START, individual items from Chroma */

/* Background */

.chroma, .code-inline {
	color: var(--black);
	background-color: var(--bkgd-code-light);
	border: 1px solid;
	border-color: var(--border-light);
	@media (prefers-color-scheme: dark) {
		background-color: var(--bkgd-code-dark);
		border-color: var(--border-dark);
	}
	/* === Fallback colors to catch var issues */
	& * {
		color: var(--clr-lt, #ffff00);
		@media (prefers-color-scheme: dark) {
			color: var(--clr-dk, #191970);
		}
	}
	/* === Other */
	.x {
		--clr-lt: var(--default-light);
		--clr-dk: var(--default-dark);
	}
	/* === Error */
	.err {
		--clr-lt: var(--red-700);
		--clr-dk: var(--red-300);
	}
	/* === Lines (most items need specifics)
	Line text (cl - was missing from original), LineTableTD (lntd),
	LineTable (lntable), LineHighlight (hl), LineNumbersTable (lnt),
	LineNumbers (ln) */
	.cl {
		--clr-lt: var(--default-light);
		--clr-dk: var(--default-dark);
	}
	.lntd {
		vertical-align: top;
		padding: 0;
		margin: 0;
		border: 0;
	}
	.lntable {
		border-spacing: 0;
		padding: 0;
		margin: 0;
		border: 0;
		width: auto;
		overflow: auto;
		display: block;
	}
	.hl {
		display: block;
		width: 100%;
		background-color: var(--yellow-200);
		@media (prefers-color-scheme: dark) {
			background-color: var(--yellow-800);
		}
	}
	.lnt, .ln {
		margin-right: 0.4em;
		padding: 0 0.4em;
		--clr-lt: var(--gray-700);
		--clr-dk: var(--gray-300);
	}
	/* === Keywords
	Keyword (k), KeywordConstant (kc), KeywordDeclaration (kd),
	KeywordNamespace (kn), KeywordPseudo (kp), KeywordReserved (kr),
	KeywordType (kt) */
	.k, .kc, .kd, .kn, .kp, .kr, .kt {
		/* font-weight: bold; */
		--clr-lt: var(--sky-700);
		--clr-dk: var(--sky-300);
	}
	/* === Names
	Name (n), NameAttribute (na), NameBuiltin (nb), NameBuiltinPseudo (bp),
	NameClass (nc), NameConstant (no), NameDecorator (nd), NameEntity (ni),
	NameException (ne), NameFunction (nf), NameFunctionMagic (fm),
	NameLabel (nl), NameNamespace (nn), NameOther (nx), NameProperty (np),
	NameTag (nt), NameVariable (nv), NameVariableClass (vc),
	NameVariableGlobal (vg), NameVariableInstance (vi), NameVariableMagic (vm) */
	.n, .na, .nb, .bp, .nc, .no, .nd, .ni, .ne, .nf, .fm, .nl, .nn, .nx, .np,
	.nt, .nv, .vc, .vg, .vi, .vm {
		--clr-lt: var(--orange-700);
		--clr-dk: var(--yellow-300);
	}
	/* === Literals
	Literal (l), LiteralDate (ld), LiteralString (s), LiteralStringAffix (sa),
	LiteralStringBacktick (sb), LiteralStringChar (sc), LiteralStringDelimiter (dl),
	LiteralStringDoc (sd), LiteralStringDouble (s2), LiteralStringEscape (se),
	LiteralStringHereDoc (sh), LiteralStringInterpol (si), LiteralStringOther (sx),
	LiteralStringRegex (sr), LiteralStringSingle (s1), LiteralStringSymbol (ss),
	LiteralNumber (m), LiteralNumberBin (mb), LiteralNumberFloat (mf),
	LiteralNumberHex (mh), LiteralNumberInteger (mi), LiteralNumberIntegerLong (il),
	LiteralNumberOct (mo) */
	.l, .ld, .s, .sa, .sb, .sc, .dl, .sd, .s2, .se, .sh, .si, .sx, .sr,
	.s1, .ss, .m, .mb, .mf, .mh, .mi, .il, .mo {
		--clr-lt: var(--gray-800);
		--clr-dk: var(--gray-300);
	}
	/* === Operators
	Operator (.o), OperatorWord (.ow) */
	.o, .ow {
		--clr-lt: var(--fuchsia-700);
		--clr-dk: var(--fuchsia-300);
	}
	/* === Punctuation (p) */
	.p {
		--clr-lt: var(--gray-800);
		--clr-dk: var(--gray-300);
	}
	/* === Comments
	Comment (c), CommentHashbang (ch), CommentMultiline (cm),
	CommentSingle (c1), CommentSpecial (cs),
	CommentPreProc (cp), CommentPreProcFile (cpf) */
	.c, .ch, .cm, .c1, .cs {
		font-style: italic;
		--clr-lt: var(--emerald-700);
		--clr-dk: var(--emerald-200);
	}
	.cp, .cpf {
		--clr-lt: var(--gray-800);
		--clr-dk: var(--gray-300);
	}
	/* === Generics
	Generic (g), GenericDeleted (gd), GenericEmph (ge - italic), GenericError (gr),
	GenericHeading (gh), GenericInserted (gi), GenericOutput (go), GenericPrompt (gp),
	GenericStrong (gs - bold), GenericSubheading (gu), GenericTraceback (gt),
	GenericUnderline (gl) */
	.g, .gd, .gr, .gh, .gi, .go, .gp, .gu, .gt, .gl {
		--clr-lt: var(--gray-800);
		--clr-dk: var(--gray-300);
	}
	.ge {
		font-style: italic;
	}
	.gs {
		font-weight: bold;
	}
	/* === TextWhitespace (w) */
	.w {
		--clr-lt: var(--gray-800);
		--clr-dk: var(--gray-300);
	}
}


/* ======= END, individual items from Chroma */

pre,
code {
	font-family: var(--monospaced);
  font-kerning: none;
  font-variant-ligatures: none;
	background: var(--bkgd-article-code-light);
  @media (prefers-color-scheme: dark) {
		background-color: var(--bkgd-article-code-dark);
  }
}

code[class*="language-"],
pre[class*="language-"] {
	color: var(--gray-200);
	background: none;
	font-size: clamp(0.9rem, 1vw + 0.625em, var(--text-lg));
	text-align: left;
	white-space: pre;
	word-spacing: normal;
	word-break: normal;
	word-wrap: normal;
	line-height: 1.5;
	tab-size: 2;
	hyphens: none;
}

/* Code blocks */
pre[class*="language-"],
pre.chroma {
	padding: 1em;
	margin: .5em 0;
	overflow: auto;
}

:not(pre) > code[class*="language-"],
pre[class*="language-"] {
	color: var(--black);
	background-color: var(--white);
	@media (prefers-color-scheme: dark) {
		color: var(--white);
		background-color: var(--slate-800);
	}
}

.highlight {
	position: relative;
	.chroma {
		border-radius: 16px;
		/* keeps code blocks from being too small
		due to the `article code` rule above */
		font-size: clamp(0.9rem, 1vw + 0.625em, var(--text-lg));
	}
}

@media screen and  (min-width: 1024px) {
	pre.expand:hover {
		margin-left: -20vw;
		margin-right: -20vw;
		max-width: 95vw;
	}
}

/* === for copy-code-to-clipboard */

/* h/t https://simplernerd.com/hugo-add-copy-to-clipboard-button/ */

.clipboard-button {
	position: absolute;
	right: 0;
	padding: 2px 7px 5px 7px;
	margin: 5px;
	color: var(--gray-500);
	border-color: var(--gray-500);
	background-color: var(--gray-100);
	border: 1px solid;
	border-radius: 6px;
	font-size: 0.8em;
	z-index: 1;
	opacity: 0;
	transition: 0.1s;
}
.clipboard-button > svg {
	fill: var(--gray-500);
}
.clipboard-button:hover {
	cursor: pointer;
	border-color: var(--green-600);
	background-color: var(--green-100);
}
.clipboard-button:hover > svg {
	fill: var(--green-600);
}
.clipboard-button:focus {
	outline: 0;
}
/* .highlight {
  position: relative;
} */
.highlight:hover > .clipboard-button {
	opacity: 1;
	transition: 0.2s;
}

/* === Inline code
:not(pre) > code[class*="language-"] {
	padding: .1em;
	border-radius: .3em;
	white-space: normal;
} */

.labeled-highlight {
	margin-bottom: 0;
	padding-bottom: 0;
	line-height: 0.5em;
}
.labeled-highlight + div.highlight {
	margin-top: 0;
	padding-top: 0;
}


/* needed for articles */

code, article code, .box code {
	--bg-lt: var(--bkgd-article-code-light);
	--bg-dk: var(--bkgd-article-code-dark);
	background-color: var(--bg-lt);
	@media (prefers-color-scheme: dark) {
		background-color: var(--bg-dk);
	}
}

code {
	font-family: var(--monospaced);
  font-kerning: none;
  font-variant-ligatures: none;
}

/* Inline code */
:not(pre) > code[class*="language-"] {
	padding: .1em;
	border-radius: .3em;
	white-space: normal;
}

article code {
	font-size: 0.975em;
	@media screen and (min-width: 768px) {
		font-size: 0.95em;
	}
	@media screen and (min-width: 1536px) {
		font-size: 0.925em;
	}
	@media screen and (min-width: 1920px) {
		font-size: 0.9em;
	}
}
article .footnotes code {
	font-size: 1em;
	/* overriding the `article code` part above for footnotes */
}

article p code {
	@media screen and (min-width: 768px) {
		white-space: nowrap;
	}
}

article p code.code-inline {
	/* font-size: var(--text-sm); */
	padding: 0.25em 0.5em;
	margin: 0 0.25em;
}

article .footnotes li code {
	white-space: normal;
}

article blockquote code {
	color: var(--slate-800);
	@media (prefers-color-scheme: dark) {
		color: var(--slate-300);
	}
}

.box {
	& code, & a code {
		font-size: 1em; /* definitely em */
		--bg-lt: var(--bkgd-box-code-light);
		--bg-dk: var(--bkgd-box-code-dark);
	}
}

article ol li .highlight {
	line-height: 1.5;
}
