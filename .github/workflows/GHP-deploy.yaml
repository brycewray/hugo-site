name: Deploy to GitHub Pages

## Based on:
## - https://xdeb.org/post/2023/deploy-hugo-github-pages-actions/
## - https://gohugo.io/hosting-and-deployment/hosting-on-github/
## - https://github.com/actions/starter-workflows/blob/main/pages/hugo.yml
## ... all as of 2023-04-29
##
## Without custom domain, will deploy to https://brycewray.github.io/hugo-site/
## from the repo at https://github.com/brycewray/hugo-site/

# When the action should run. Here we specify it should run on push to main branch.
# We also allow for manually running the action with the empty "workflow_dispatch".
on:
  push:
    branches:
      - main

  workflow_dispatch:

env:
  HUGO_VERSION: 0.111.3 # will get Extended Version below (non-Node)
  DART_SASS_VERSION: 1.62.1 # (depends on STYLING env var)
  PAGEFIND_VERSION: 0.12.0 # (non-Node)
  NODE: true # choices: 'true' and 'false' (mainly checking only for [== "true"])
  STYLING: VCSS # choices: 'SCSS' and 'VCSS' (VCSS, albeit perhaps with PostCSS for nesting, etc.)
  # HOST: GHP # choices: 'CFP' - 'Vercel' - GHP

# Set the needed permissions
permissions:
  contents: read
  pages: write
  id-token: write

# Cancel running deployments if a new one is issued.
concurrency:
  group: pages
  cancel-in-progress: true

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout default branch
        uses: actions/checkout@v3
      - name: Set up Node.js (cond. - Node)
        if: ${{ env.NODE == 'true' }}
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      # - name: Install Hugo, Pagefind, etc. (cond. - Node)
      #   if: ${{ env.NODE == 'true' }}
      #   run: npm install
      - name: Hugo download/install (cond. - non-Node)
        # if: ${{ env.NODE != 'true' }}
        run: |
          wget https://github.com/gohugoio/hugo/releases/download/v${{ env.HUGO_VERSION }}/hugo_extended_${{ env.HUGO_VERSION }}_linux-amd64.deb -O hugo_extended_${{ env.HUGO_VERSION }}_linux-amd64.deb
          sudo dpkg -i hugo*.deb
      - name: Install Embedded Dart Sass (cond. - SCSS)
        if: ${{ env.STYLING == 'SCSS' }}
        run: |
          curl -LJO https://github.com/sass/dart-sass-embedded/releases/download/${{ env.DART_SASS_VERSION }}/sass_embedded-${{ env.DART_SASS_VERSION }}-linux-x64.tar.gz
          tar -xvf sass_embedded-${{ env.DART_SASS_VERSION }}-linux-x64.tar.gz
          sass_embedded/dart-sass-embedded --version
          echo "$GITHUB_WORKSPACE/sass_embedded" >> $GITHUB_PATH
      - name: Install Pagefind (cond. - non-Node)
        # if: ${{ env.NODE != 'true' }}
        uses: supplypike/setup-bin@v3
        with:
          uri: "https://github.com/CloudCannon/pagefind/releases/download/v${{ env.PAGEFIND_VERSION }}/pagefind_extended-v${{ env.PAGEFIND_VERSION }}-x86_64-unknown-linux-musl.tar.gz"
          name: "pagefind_extended"
          version: ${{env.PAGEFIND_VERSION}}
      - name: Set up GitHub Pages
        id: pages
        uses: actions/configure-pages@v3
      - name: Install Node.js dependencies
        if: ${{ env.NODE == 'true' }}
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
      # - name: Build site with Hugo, move feed files, run Pagefind (cond. - Node)
      #   if: ${{ env.NODE == 'true' }}
      #   run: npm run build
      #   ## package.json `build` must (somehow) account for `--baseURL` stuff (?!)
      - name: Build site with Hugo, move feed files, run Pagefind
        # if: ${{ env.NODE != 'true' }} # have to run with GHP
        run: |
          hugo --verbose --minify --baseURL "${{ steps.pages.outputs.base_url }}/"
          mv public/posts/index.xml public/index-excerpts.xml
          mv public/posts/index.json public/index-excerpts.json
          pagefind_extended --source "public"
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./public

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
